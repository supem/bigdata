package com.fr.form.ui.container;import com.fr.form.ui.EdashujuXMLUtils;import com.fr.form.ui.Widget;import com.fr.general.ComparatorUtils;import com.fr.general.Inter;import com.fr.general.xml.GeneralXMLTools;import com.fr.json.JSONArray;import com.fr.json.JSONException;import com.fr.json.JSONObject;import com.fr.script.Calculator;import com.fr.stable.ArrayUtils;import com.fr.stable.StringUtils;import com.fr.stable.web.Repository;import com.fr.stable.xml.XMLPrintWriter;import com.fr.stable.xml.XMLReadable;import com.fr.stable.xml.XMLableReader;import java.awt.Dimension;import java.util.List;public final class WBorderLayout extends WLayout{  public static final String NORTH = "North";  public static final String SOUTH = "South";  public static final String EAST = "East";  public static final String WEST = "West";  public static final String CENTER = "Center";  public static final String[] defalutDirections = { "North", "South", "East", "West" };  private static final int DEFAULT_SIZE = 60;  private Widget north;  private int northSize = 60;  private String northTitle;  private Widget south;  private int southSize = 60;  private String southTitle;  private Widget east;  private int eastSize = 60;  private String eastTitle;  private Widget west;  private int westSize = 60;  private String westTitle;  private Widget center;  private String centerTitle;  private String[] directions;  public WBorderLayout()  {    this(0, 0);  }  public WBorderLayout(int paramInt1, int paramInt2)  {    this(paramInt1, paramInt2, defalutDirections);  }public void readXML(XMLableReader paramXMLableReader)  {    super.readXML(paramXMLableReader);    if (paramXMLableReader.isChildNode())    {      String str = paramXMLableReader.getTagName();      if (ComparatorUtils.equals(str, "RowHeight"))        this.widgetsHeightList_DEC = dashujuXMLUtils.readDynamicNumberList(paramXMLableReader);    }  }  public void writeXML(XMLPrintWriter paramXMLPrintWriter)  {    super.writeXML(paramXMLPrintWriter);    paramXMLPrintWriter.startTAG("RowHeight");    dashujuXMLUtils.writeDynamicNumberList(paramXMLPrintWriter, this.widgetsHeightList_DEC);    paramXMLPrintWriter.end();  }  public Object clone()    throws CloneNotSupportedException  {    WVerticalBoxLayout localWVerticalBoxLayout = (WVerticalBoxLayout)super.clone();    localWVerticalBoxLayout.widgetsHeightList_DEC = ((DynamicNumberList)this.widgetsHeightList_DEC.clone());    return localWVerticalBoxLayout;  }}