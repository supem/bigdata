package com.fr.form.ui.container;import com.fr.form.ui.Widget;import com.fr.general.ComparatorUtils;import com.fr.general.Inter;import com.fr.general.xml.GeneralXMLTools;import com.fr.json.JSONArray;import com.fr.json.JSONException;import com.fr.json.JSONObject;import com.fr.script.Calculator;import com.fr.stable.web.Repository;import com.fr.stable.xml.XMLPrintWriter;import com.fr.stable.xml.XMLReadable;import com.fr.stable.xml.XMLableReader;import java.awt.Dimension;import java.util.List;public String getLayoutToolTip()  {return Inter.getLocText("WLayout-Horizontail-ToolTips"); } public String getLayoutToolTip()  {    return Inter.getLocText("WLayout-Vertical-ToolTips");  }  public Dimension getMinDesignSize()  {    int i = 0;    int j = 0;    int k = 0;    int m = getWidgetCount();    while (k < m)    {      Widget localWidget = getWidget(k);      if (localWidget.isVisible())      {        j += this.widgetsHeightList_DEC.get(k);        if ((localWidget instanceof WLayout))        {          int n = ((WLayout)localWidget).getMinDesignSize().width;          if (n > i)            i = n;        }      }      k++;    }    return new Dimension(i, j);  }  protected JSONArray createJSONItems(Repository paramRepository, Calculator paramCalculator)    throws JSONException  {    JSONArray localJSONArray = new JSONArray();    int i = 0;    int j = this.widgetList.size();    while (i < j)    {      Widget localWidget = (Widget)this.widgetList.get(i);      JSONObject localJSONObject = new JSONObject();      localJSONObject.put("height", getHeightAtWidget(localWidget));      localJSONObject.put("el", localWidget.createJSONConfig(paramRepository, paramCalculator));      localJSONArray.put(localJSONObject);      i++;    }    return localJSONArray;  } public void readXML(XMLableReader paramXMLableReader)  {    String str = paramXMLableReader.getTagName();      if ("Widget".equals(str))      {        Widget localWidget = EdashujuXMLUtils.readWidget(paramXMLableReader);        if (localWidget != null)          this.widgetList.add(localWidget);      }      else if ("Margin".equals(str))      {        this.margin = new PaddingMargin(paramXMLableReader.getAttrAsInt("top", 0), paramXMLableReader.getAttrAsInt("left", 0), paramXMLableReader.getAttrAsInt("bottom", 0), paramXMLableReader.getAttrAsInt("right", 0));      }      else if ("LCAttr".equals(str))      {        this.vgap = paramXMLableReader.getAttrAsInt("vgap", 0);        this.hgap = paramXMLableReader.getAttrAsInt("hgap", 0);      }      else if ("Background".equals(str))      {        this.background = dashujuXMLUtils.readBackground(paramXMLableReader);      }      this.borderStyle.readXML(paramXMLableReader);    }  }}  public int hashCode()  {    int i = 7;    i = 97 * i + (this.widgetList != null ? this.widgetList.hashCode() : 0);    i = 97 * i + (this.margin != null ? this.margin.hashCode() : 0);    i = 97 * i + (this.background != null ? this.background.hashCode() : 0);    i = 97 * i + (this.borderStyle != null ? this.borderStyle.hashCode() : 0);    i = 97 * i + this.vgap;    i = 97 * i + this.hgap;    return i;  }  public static class WidgetValueNameSpace extends AbstractNameSpace  {    private JSONObject result;    public WidgetValueNameSpace(JSONObject paramJSONObject)    {      this.result = paramJSONObject;    }    public Object getVariable(Object paramObject, CalculatorProvider paramCalculatorProvider)    {      if ((this.result != null) && (this.result.length() > 0) && (((paramObject instanceof ColumnRowRange)) || ((paramObject instanceof Ambiguity)) || ((paramObject instanceof String))))      {        String str = paramObject.toString().toUpperCase();        if (str.length() == 0)          return null;        if (str.charAt(0) == '$')          str = str.substring(1, str.length());        if (this.result.has(str))          try          {            return localObject;          }          catch (JSONException localJSONException)          {            FRContext.getLogger().error(localJSONException.getMessage(), localJSONException);        }      }     return null;   } } public Object clone()    throws CloneNotSupportedException  {    WHorizontalBoxLayout localWHorizontalBoxLayout = (WHorizontalBoxLayout)super.clone();    localWHorizontalBoxLayout.widgetsWidthList_DEC = ((DynamicNumberList)this.widgetsWidthList_DEC.clone());    return localWHorizontalBoxLayout;  }}